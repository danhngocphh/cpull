/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import model.sjfModel;

/**
 *
 * @author proxc
 */
public class Home20 extends javax.swing.JFrame {

    ClientControl control;
    ArrayList<sjfModel> laplichSjf;

    private CardLayout cardLayout;

    /**
     * Creates new form Home20
     */
    public Home20() {
        initComponents();
        control = new ClientControl();

        Home20.this.getRootPane().setBorder(new LineBorder(new Color(76, 41, 211)));
        lblTitle.setText(this.getTitle());
        cardLayout = (CardLayout) pnlRight.getLayout();

        if (OSUtils.getOSType() == OSUtils.OSType.MacOS) {
            pnlTop.remove(pnlTitle);
            pnlTop.remove(pnlRight);

            pnlTop.add(pnlTitle, BorderLayout.EAST);
            pnlTop.add(pnlActions, BorderLayout.WEST);

            pnlActions.remove(lblClose);
            pnlActions.remove(lblMaximize);
            pnlActions.remove(lblMinimize);

            pnlActions.add(lblClose);
            pnlActions.add(lblMaximize);
            pnlActions.add(lblMinimize);

            pnlTitle.remove(lblTitle);
            pnlTitle.setLayout(new FlowLayout(FlowLayout.RIGHT, 10, 8));
            pnlTitle.add(lblTitle);

        }
        if (OSUtils.getOSType() == OSUtils.OSType.Windows) {
            pnlTop.remove(pnlTitle);
            pnlTop.remove(pnlRight);

            pnlTop.add(pnlTitle, BorderLayout.WEST);
            pnlTop.add(pnlActions, BorderLayout.EAST);

            pnlActions.remove(lblClose);
            pnlActions.remove(lblMaximize);
            pnlActions.remove(lblMinimize);

            pnlActions.add(lblMinimize);
            pnlActions.add(lblMaximize);
            pnlActions.add(lblClose);

            pnlTitle.remove(lblTitle);
            pnlTitle.setLayout(new FlowLayout(FlowLayout.LEFT, 10, 8));
            pnlTitle.add(lblTitle);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTop = new javax.swing.JPanel();
        pnlActions = new javax.swing.JPanel();
        lblMinimize = new javax.swing.JLabel();
        lblMaximize = new javax.swing.JLabel();
        lblClose = new javax.swing.JLabel();
        pnlTitle = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        pnlParent = new javax.swing.JPanel();
        sidepane = new javax.swing.JPanel();
        btn_typo = new javax.swing.JPanel();
        ind_typo = new javax.swing.JPanel();
        jFCFS = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btn_fonts = new javax.swing.JPanel();
        ind_fonts = new javax.swing.JPanel();
        jSJF = new javax.swing.JLabel();
        btn_icons = new javax.swing.JPanel();
        ind_icons = new javax.swing.JPanel();
        jSRJF = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btn_btns = new javax.swing.JPanel();
        ind_btns = new javax.swing.JPanel();
        jRR = new javax.swing.JLabel();
        btn_data = new javax.swing.JPanel();
        ind_data = new javax.swing.JPanel();
        pnlRight = new javax.swing.JPanel();
        pnlSJF = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSJF = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jSendSJF = new javax.swing.JButton();
        jnumberSJF = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jinputSJF = new javax.swing.JTable();
        pnlTypography = new javax.swing.JPanel();
        pnlPriotity = new javax.swing.JPanel();
        jnumberP = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jSendPriority = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPriority = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTablePriority = new javax.swing.JTable();
        pnlFCFS = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblFCFS = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jSendFCFS = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jinputFCFS = new javax.swing.JTable();
        jnumberFCFS = new javax.swing.JComboBox<>();
        pnlRR = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblRR = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jSendRR = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jinputRR = new javax.swing.JTable();
        jnumberRR = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CPU Scheduling");
        setLocationByPlatform(true);
        setUndecorated(true);

        pnlTop.setBackground(new java.awt.Color(50, 27, 140));
        pnlTop.setPreferredSize(new java.awt.Dimension(1024, 30));
        pnlTop.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlTopMouseDragged(evt);
            }
        });
        pnlTop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlTopMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlTopMousePressed(evt);
            }
        });
        pnlTop.setLayout(new java.awt.BorderLayout());

        pnlActions.setBackground(new java.awt.Color(50, 27, 140));
        pnlActions.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        lblMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home20/images/icons8_minus_18px_1.png"))); // NOI18N
        lblMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblMinimizeMousePressed(evt);
            }
        });
        pnlActions.add(lblMinimize);

        lblMaximize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home20/images/icons8_rectangle_stroked_18px.png"))); // NOI18N
        lblMaximize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblMaximizeMousePressed(evt);
            }
        });
        pnlActions.add(lblMaximize);

        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home20/images/icons8_multiply_18px_1.png"))); // NOI18N
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblCloseMousePressed(evt);
            }
        });
        pnlActions.add(lblClose);

        pnlTop.add(pnlActions, java.awt.BorderLayout.LINE_END);

        pnlTitle.setBackground(new java.awt.Color(50, 27, 140));
        pnlTitle.setPreferredSize(new java.awt.Dimension(200, 30));
        pnlTitle.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 8));

        lblTitle.setForeground(new java.awt.Color(204, 204, 204));
        lblTitle.setText("CPU Scheduling");
        pnlTitle.add(lblTitle);

        pnlTop.add(pnlTitle, java.awt.BorderLayout.LINE_START);

        getContentPane().add(pnlTop, java.awt.BorderLayout.PAGE_START);

        pnlParent.setLayout(new java.awt.BorderLayout());

        sidepane.setBackground(new java.awt.Color(76, 41, 211));
        sidepane.setForeground(new java.awt.Color(51, 51, 51));
        sidepane.setPreferredSize(new java.awt.Dimension(250, 200));
        sidepane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                sidepaneMouseDragged(evt);
            }
        });
        sidepane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sidepaneMousePressed(evt);
            }
        });

        btn_typo.setBackground(new java.awt.Color(76, 41, 211));
        btn_typo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_typoMousePressed(evt);
            }
        });
        btn_typo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ind_typo.setOpaque(false);
        ind_typo.setPreferredSize(new java.awt.Dimension(4, 40));

        javax.swing.GroupLayout ind_typoLayout = new javax.swing.GroupLayout(ind_typo);
        ind_typo.setLayout(ind_typoLayout);
        ind_typoLayout.setHorizontalGroup(
            ind_typoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        ind_typoLayout.setVerticalGroup(
            ind_typoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        btn_typo.add(ind_typo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 40));

        jFCFS.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jFCFS.setForeground(new java.awt.Color(204, 204, 204));
        jFCFS.setText("First Come First Served");
        btn_typo.add(jFCFS, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("CPU Scheduling");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("v1.0");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("V2.11");

        btn_fonts.setBackground(new java.awt.Color(76, 41, 211));
        btn_fonts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_fontsMousePressed(evt);
            }
        });
        btn_fonts.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ind_fonts.setOpaque(false);
        ind_fonts.setPreferredSize(new java.awt.Dimension(4, 40));

        javax.swing.GroupLayout ind_fontsLayout = new javax.swing.GroupLayout(ind_fonts);
        ind_fonts.setLayout(ind_fontsLayout);
        ind_fontsLayout.setHorizontalGroup(
            ind_fontsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        ind_fontsLayout.setVerticalGroup(
            ind_fontsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        btn_fonts.add(ind_fonts, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 40));

        jSJF.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jSJF.setForeground(new java.awt.Color(204, 204, 204));
        jSJF.setText("Shortest Job First");
        btn_fonts.add(jSJF, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        btn_icons.setBackground(new java.awt.Color(76, 41, 211));
        btn_icons.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_iconsMousePressed(evt);
            }
        });
        btn_icons.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ind_icons.setOpaque(false);
        ind_icons.setPreferredSize(new java.awt.Dimension(4, 40));

        javax.swing.GroupLayout ind_iconsLayout = new javax.swing.GroupLayout(ind_icons);
        ind_icons.setLayout(ind_iconsLayout);
        ind_iconsLayout.setHorizontalGroup(
            ind_iconsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        ind_iconsLayout.setVerticalGroup(
            ind_iconsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        btn_icons.add(ind_icons, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 40));

        jSRJF.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jSRJF.setForeground(new java.awt.Color(204, 204, 204));
        jSRJF.setText("Priority");
        btn_icons.add(jSRJF, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 153, 153));
        jLabel7.setText("ALGORITHM");

        btn_btns.setBackground(new java.awt.Color(76, 41, 211));
        btn_btns.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_btnsMousePressed(evt);
            }
        });
        btn_btns.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ind_btns.setOpaque(false);
        ind_btns.setPreferredSize(new java.awt.Dimension(4, 40));

        javax.swing.GroupLayout ind_btnsLayout = new javax.swing.GroupLayout(ind_btns);
        ind_btns.setLayout(ind_btnsLayout);
        ind_btnsLayout.setHorizontalGroup(
            ind_btnsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        ind_btnsLayout.setVerticalGroup(
            ind_btnsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        btn_btns.add(ind_btns, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 40));

        jRR.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jRR.setForeground(new java.awt.Color(204, 204, 204));
        jRR.setText("Round Robin");
        btn_btns.add(jRR, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        btn_data.setBackground(new java.awt.Color(76, 41, 211));
        btn_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_dataMousePressed(evt);
            }
        });
        btn_data.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ind_data.setOpaque(false);
        ind_data.setPreferredSize(new java.awt.Dimension(4, 40));

        javax.swing.GroupLayout ind_dataLayout = new javax.swing.GroupLayout(ind_data);
        ind_data.setLayout(ind_dataLayout);
        ind_dataLayout.setHorizontalGroup(
            ind_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        ind_dataLayout.setVerticalGroup(
            ind_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        btn_data.add(ind_data, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 40));

        javax.swing.GroupLayout sidepaneLayout = new javax.swing.GroupLayout(sidepane);
        sidepane.setLayout(sidepaneLayout);
        sidepaneLayout.setHorizontalGroup(
            sidepaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn_typo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_fonts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_icons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_btns, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_data, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(sidepaneLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(sidepaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(sidepaneLayout.createSequentialGroup()
                        .addGroup(sidepaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(33, 33, 33)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sidepaneLayout.setVerticalGroup(
            sidepaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidepaneLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(sidepaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(41, 41, 41)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_typo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_fonts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_icons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_btns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlParent.add(sidepane, java.awt.BorderLayout.LINE_START);

        pnlRight.setLayout(new java.awt.CardLayout());

        tblSJF.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Process ID", "Arrival Time", "Burst Time", "Waiting Time", "Turnaround Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSJF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSJFMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSJF);

        jLabel4.setText("Number of Processes:");

        jSendSJF.setText("Submit");
        jSendSJF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSendSJFActionPerformed(evt);
            }
        });

        jnumberSJF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4", "1", "2", "3", "4", "5" }));
        jnumberSJF.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jnumberSJFItemStateChanged(evt);
            }
        });

        jinputSJF.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Process:", "Arrival Time:", "Burst Time:"
            }
        ));
        jinputSJF.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jinputSJF.setOpaque(false);
        jinputSJF.setRequestFocusEnabled(false);
        jScrollPane3.setViewportView(jinputSJF);

        javax.swing.GroupLayout pnlSJFLayout = new javax.swing.GroupLayout(pnlSJF);
        pnlSJF.setLayout(pnlSJFLayout);
        pnlSJFLayout.setHorizontalGroup(
            pnlSJFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSJFLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jnumberSJF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                .addGap(85, 85, 85))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSJFLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(pnlSJFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
                    .addGroup(pnlSJFLayout.createSequentialGroup()
                        .addGap(568, 568, 568)
                        .addComponent(jSendSJF, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)))
                .addGap(55, 55, 55))
        );
        pnlSJFLayout.setVerticalGroup(
            pnlSJFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSJFLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(pnlSJFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSJFLayout.createSequentialGroup()
                        .addGroup(pnlSJFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jnumberSJF)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(90, 90, 90))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jSendSJF)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(249, 249, 249))
        );

        pnlRight.add(pnlSJF, "cSJF");

        javax.swing.GroupLayout pnlTypographyLayout = new javax.swing.GroupLayout(pnlTypography);
        pnlTypography.setLayout(pnlTypographyLayout);
        pnlTypographyLayout.setHorizontalGroup(
            pnlTypographyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 808, Short.MAX_VALUE)
        );
        pnlTypographyLayout.setVerticalGroup(
            pnlTypographyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 609, Short.MAX_VALUE)
        );

        pnlRight.add(pnlTypography, "card2");

        jnumberP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4", "1", "2", "3", "4", "5" }));
        jnumberP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jnumberPItemStateChanged(evt);
            }
        });

        jLabel5.setText("Number of Processes:");

        jSendPriority.setText("Submit");
        jSendPriority.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSendPriorityActionPerformed(evt);
            }
        });

        tblPriority.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Process", "Burst Time", "Waiting Time", "Turn Around Time", "Priority"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPriority.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPriorityMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPriority);

        jTablePriority.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                " Process:", "Burst Time", "Priority"
            }
        ));
        jScrollPane4.setViewportView(jTablePriority);

        javax.swing.GroupLayout pnlPriotityLayout = new javax.swing.GroupLayout(pnlPriotity);
        pnlPriotity.setLayout(pnlPriotityLayout);
        pnlPriotityLayout.setHorizontalGroup(
            pnlPriotityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPriotityLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(pnlPriotityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPriotityLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane2))
                    .addGroup(pnlPriotityLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jnumberP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(71, 71, 71)
                        .addComponent(jScrollPane4)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPriotityLayout.createSequentialGroup()
                        .addGap(582, 582, 582)
                        .addComponent(jSendPriority, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(51, 51, 51))
        );
        pnlPriotityLayout.setVerticalGroup(
            pnlPriotityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPriotityLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(pnlPriotityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPriotityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jnumberP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jSendPriority)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(266, Short.MAX_VALUE))
        );

        pnlRight.add(pnlPriotity, "cPriority");

        tblFCFS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Process ID", "Burst Time", "Waiting Time", "Turnaround Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFCFS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFCFSMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblFCFS);

        jLabel6.setText("Number of Processes:");

        jSendFCFS.setText("Submit");
        jSendFCFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSendFCFSActionPerformed(evt);
            }
        });

        jinputFCFS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Process:", "Burst Time:"
            }
        ));
        jinputFCFS.setOpaque(false);
        jinputFCFS.setRequestFocusEnabled(false);
        jScrollPane6.setViewportView(jinputFCFS);

        jnumberFCFS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4", "1", "2", "3", "4", "5" }));
        jnumberFCFS.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jnumberFCFSItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlFCFSLayout = new javax.swing.GroupLayout(pnlFCFS);
        pnlFCFS.setLayout(pnlFCFSLayout);
        pnlFCFSLayout.setHorizontalGroup(
            pnlFCFSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFCFSLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jnumberFCFS, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane6)
                .addGap(110, 110, 110))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFCFSLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(pnlFCFSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlFCFSLayout.createSequentialGroup()
                        .addGap(568, 568, 568)
                        .addComponent(jSendFCFS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE))
                .addGap(55, 55, 55))
        );
        pnlFCFSLayout.setVerticalGroup(
            pnlFCFSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFCFSLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(pnlFCFSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFCFSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jnumberFCFS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSendFCFS)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(249, Short.MAX_VALUE))
        );

        pnlRight.add(pnlFCFS, "cFCFS");

        tblRR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Process ID", "Burst Time", "Waiting Time", "Turnaround Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRRMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblRR);

        jLabel8.setText("Number of Processes:");

        jSendRR.setText("Submit");
        jSendRR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSendRRActionPerformed(evt);
            }
        });

        jinputRR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Process:", "Burst Time:"
            }
        ));
        jinputRR.setOpaque(false);
        jinputRR.setRequestFocusEnabled(false);
        jScrollPane8.setViewportView(jinputRR);

        jnumberRR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4", "1", "2", "3", "4", "5" }));
        jnumberRR.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jnumberRRItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlRRLayout = new javax.swing.GroupLayout(pnlRR);
        pnlRR.setLayout(pnlRRLayout);
        pnlRRLayout.setHorizontalGroup(
            pnlRRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRRLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jnumberRR, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane8)
                .addGap(110, 110, 110))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRRLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(pnlRRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlRRLayout.createSequentialGroup()
                        .addGap(568, 568, 568)
                        .addComponent(jSendRR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE))
                .addGap(55, 55, 55))
        );
        pnlRRLayout.setVerticalGroup(
            pnlRRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRRLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(pnlRRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jnumberRR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSendRR)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(249, Short.MAX_VALUE))
        );

        pnlRight.add(pnlRR, "cRR");

        pnlParent.add(pnlRight, java.awt.BorderLayout.CENTER);

        getContentPane().add(pnlParent, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    int xy, xx;
    private void sidepaneMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sidepaneMouseDragged
        // TODO add your handling code here:

    }//GEN-LAST:event_sidepaneMouseDragged

    private void sidepaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sidepaneMousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_sidepaneMousePressed

    private void btn_typoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_typoMousePressed
        // TODO add your handling code here:

        setColor(btn_typo);
        resetColor(btn_data);
        resetColor(btn_btns);
        resetColor(btn_fonts);
        resetColor(btn_icons);
        ind_typo.setOpaque(true);
        ind_btns.setOpaque(false);
        ind_data.setOpaque(false);
        ind_fonts.setOpaque(false);
        ind_icons.setOpaque(false);

        cardLayout.show(pnlRight, "cFCFS");

    }//GEN-LAST:event_btn_typoMousePressed

    private void btn_fontsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_fontsMousePressed
        // TODO add your handling code here:
        setColor(btn_fonts);
        resetColor(btn_data);
        resetColor(btn_btns);
        resetColor(btn_typo);
        resetColor(btn_icons);

        //indicators
        ind_typo.setOpaque(false);
        ind_btns.setOpaque(false);
        ind_data.setOpaque(false);
        ind_fonts.setOpaque(true);
        ind_icons.setOpaque(false);

        cardLayout.show(pnlRight, "cSJF");

    }//GEN-LAST:event_btn_fontsMousePressed

    private void btn_btnsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_btnsMousePressed
        // TODO add your handling code here:
        setColor(btn_btns);
        resetColor(btn_data);
        resetColor(btn_typo);
        resetColor(btn_fonts);
        resetColor(btn_icons);

        ind_typo.setOpaque(false);
        ind_btns.setOpaque(true);
        ind_data.setOpaque(false);
        ind_fonts.setOpaque(false);
        ind_icons.setOpaque(false);

        cardLayout.show(pnlRight, "cRR");
    }//GEN-LAST:event_btn_btnsMousePressed


    private void lblMaximizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMaximizeMousePressed
        if (Home20.this.getExtendedState() == MAXIMIZED_BOTH) {
            Home20.this.setExtendedState(JFrame.NORMAL);
        } else {
            Home20.this.setExtendedState(MAXIMIZED_BOTH);
        }
    }//GEN-LAST:event_lblMaximizeMousePressed

    private void lblCloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMousePressed
        System.exit(0);
    }//GEN-LAST:event_lblCloseMousePressed

    private void lblMinimizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizeMousePressed
        Home20.this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_lblMinimizeMousePressed
    private void pnlTopMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTopMousePressed
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_pnlTopMousePressed

    private void pnlTopMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTopMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_pnlTopMouseDragged

    private void pnlTopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTopMouseClicked
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            if (Home20.this.getExtendedState() == MAXIMIZED_BOTH) {
                Home20.this.setExtendedState(JFrame.NORMAL);
            } else {
                Home20.this.setExtendedState(MAXIMIZED_BOTH);
            }
        }
    }//GEN-LAST:event_pnlTopMouseClicked


    private void jSendPriorityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSendPriorityActionPerformed
        if (validCheckP(jTablePriority)) {
            if (validCheckP1(jTablePriority)) {
        String send = "2";
        String[] words = jnumberSJF.getSelectedItem().toString().split(";");
        send += ";" + jnumberP.getSelectedItem().toString();
        int num = Integer.valueOf(jnumberP.getSelectedItem().toString());
        for (int i = 0; i < num; i++) {
            send += ";" + String.valueOf(jTablePriority.getModel().getValueAt(i, 0));
            send += ";" + String.valueOf(jTablePriority.getModel().getValueAt(i, 1));
            send += ";" + String.valueOf(jTablePriority.getModel().getValueAt(i, 2));
        }
        //        laplichSjf.get(0).setNum(Integer.valueOf(tfTenTim.getText()));
        //        laplichSjf.get(0).setId(Integer.valueOf());
        //        laplichSjf.get(0).setArrivalTime(Integer.valueOf());
        //        laplichSjf.get(0).setBurstTime(Integer.valueOf());
        //        laplichSjf.get(1).setNum(Integer.valueOf(tfTenTim.getText()));
        //        laplichSjf.get(1).setId(Integer.valueOf(id2.getText()));
        //        laplichSjf.get(1).setArrivalTime(Integer.valueOf(ArrivalTime2.getText()));
        //        laplichSjf.get(1).setBurstTime(Integer.valueOf(BurstTime2.getText()));
        //        Object s = null;

        control.open();
        control.sendData(send);
        Object o = control.receiveData();
        if (o instanceof String) {
            //            laplichSjf = (ArrayList<sjfModel>) o;
            String tmp = String.valueOf(o);
            updateTablePriority(tmp);
        }
        control.close();
            }else{
                JOptionPane.showMessageDialog(null, "Value is not valid");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Field is empty");
        }
    }//GEN-LAST:event_jSendPriorityActionPerformed

    private void tblPriorityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPriorityMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPriorityMouseClicked

    private void jSendSJFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSendSJFActionPerformed
        // TODO add your handling code here:
        
        if (validCheckSJF(jinputSJF)) {
            if (validCheckSJF1(jinputSJF)) {
                String send = "1";
                String[] words = jnumberSJF.getSelectedItem().toString().split(";");
                send += ";" + jnumberSJF.getSelectedItem().toString();
                int num = Integer.valueOf(jnumberSJF.getSelectedItem().toString());
                for (int i = 0; i < num; i++) {
                    send += ";" + String.valueOf(jinputSJF.getModel().getValueAt(i, 0));
                    send += ";" + String.valueOf(jinputSJF.getModel().getValueAt(i, 1));
                    send += ";" + String.valueOf(jinputSJF.getModel().getValueAt(i, 2));
                }

                //        laplichSjf.get(0).setNum(Integer.valueOf(tfTenTim.getText()));
                //        laplichSjf.get(0).setId(Integer.valueOf());
                //        laplichSjf.get(0).setArrivalTime(Integer.valueOf());
                //        laplichSjf.get(0).setBurstTime(Integer.valueOf());
                //        laplichSjf.get(1).setNum(Integer.valueOf(tfTenTim.getText()));
                //        laplichSjf.get(1).setId(Integer.valueOf(id2.getText()));
                //        laplichSjf.get(1).setArrivalTime(Integer.valueOf(ArrivalTime2.getText()));
                //        laplichSjf.get(1).setBurstTime(Integer.valueOf(BurstTime2.getText()));
                //        Object s = null;
                control.open();
                control.sendData(send);
                Object o = control.receiveData();
                if (o instanceof String) {
                    //            laplichSjf = (ArrayList<sjfModel>) o;
                    String tmp = String.valueOf(o);
                    updateTableSJF(tmp);
                }
                control.close();

            } else {
                JOptionPane.showMessageDialog(null, "Value is not valid");

            }

        } else {

            JOptionPane.showMessageDialog(null, "Field is empty");

        }

    }//GEN-LAST:event_jSendSJFActionPerformed

    private void tblSJFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSJFMouseClicked
        //        // TODO add your handling code here:
        //        //        int row = tblMatHang.getSelectedRow();
        //        int row = 0;
        //
        //
        //        new EditView(control,mh).setVisible(true);
    }//GEN-LAST:event_tblSJFMouseClicked

    private void jnumberSJFItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jnumberSJFItemStateChanged
        DefaultTableModel model = (DefaultTableModel) jinputSJF.getModel();
        int rows2 = 2;
        int rows3 = 3;
        int rows4 = 4;
        int rows5 = 5;
        if (jnumberSJF.getSelectedItem().toString().equals("2")) {
            model.setRowCount(rows2);

        }
        if (jnumberSJF.getSelectedItem().toString().equals("3")) {
            model.setRowCount(rows3);

        }
        if (jnumberSJF.getSelectedItem().toString().equals("4")) {
            model.setRowCount(rows4);

        }
        if (jnumberSJF.getSelectedItem().toString().equals("5")) {
            model.setRowCount(rows5);

        }
    }//GEN-LAST:event_jnumberSJFItemStateChanged

    private void tblFCFSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFCFSMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblFCFSMouseClicked

    private void jSendFCFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSendFCFSActionPerformed
        // TODO add your handling code here:
        String send = "3";
        if (validCheckFCFS(jinputFCFS)) {
            if (validCheckFCFS1(jinputFCFS)) {
        
        String[] words = jnumberSJF.getSelectedItem().toString().split(";");
        send += ";" + jnumberFCFS.getSelectedItem().toString();
        int num = Integer.valueOf(jnumberFCFS.getSelectedItem().toString());
        for (int i = 0; i < num; i++) {
            send += ";" + String.valueOf(jinputFCFS.getModel().getValueAt(i, 0));
            send += ";" + String.valueOf(jinputFCFS.getModel().getValueAt(i, 1));

        }

        //        laplichSjf.get(0).setNum(Integer.valueOf(tfTenTim.getText()));
        //        laplichSjf.get(0).setId(Integer.valueOf());
        //        laplichSjf.get(0).setArrivalTime(Integer.valueOf());
        //        laplichSjf.get(0).setBurstTime(Integer.valueOf());
        //        laplichSjf.get(1).setNum(Integer.valueOf(tfTenTim.getText()));
        //        laplichSjf.get(1).setId(Integer.valueOf(id2.getText()));
        //        laplichSjf.get(1).setArrivalTime(Integer.valueOf(ArrivalTime2.getText()));
        //        laplichSjf.get(1).setBurstTime(Integer.valueOf(BurstTime2.getText()));
        //        Object s = null;
        control.open();
        control.sendData(send);
        Object o = control.receiveData();
        if (o instanceof String) {
            //            laplichSjf = (ArrayList<sjfModel>) o;
            String tmp = String.valueOf(o);
            updateTableFCFS(tmp);
        }
        control.close();
        } else {
                JOptionPane.showMessageDialog(null, "Value is not valid");
                System.out.print(send);

            }

        } else {

            JOptionPane.showMessageDialog(null, "Field is empty");

        }
    }//GEN-LAST:event_jSendFCFSActionPerformed

    private void jnumberFCFSItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jnumberFCFSItemStateChanged
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jinputFCFS.getModel();
        int rows2 = 2;
        int rows3 = 3;
        int rows4 = 4;
        int rows5 = 5;
        if (jnumberFCFS.getSelectedItem().toString().equals("2")) {
            model.setRowCount(rows2);

        }
        if (jnumberFCFS.getSelectedItem().toString().equals("3")) {
            model.setRowCount(rows3);

        }
        if (jnumberFCFS.getSelectedItem().toString().equals("4")) {
            model.setRowCount(rows4);

        }
        if (jnumberFCFS.getSelectedItem().toString().equals("5")) {
            model.setRowCount(rows5);

        }
    }//GEN-LAST:event_jnumberFCFSItemStateChanged

    private void jnumberPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jnumberPItemStateChanged
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTablePriority.getModel();
        int rows2 = 2;
        int rows3 = 3;
        int rows4 = 4;
        int rows5 = 5;
        if (jnumberP.getSelectedItem().toString().equals("2")) {
            model.setRowCount(rows2);

        }
        if (jnumberP.getSelectedItem().toString().equals("3")) {
            model.setRowCount(rows3);

        }
        if (jnumberP.getSelectedItem().toString().equals("4")) {
            model.setRowCount(rows4);

        }
        if (jnumberP.getSelectedItem().toString().equals("5")) {
            model.setRowCount(rows5);

        }
    }//GEN-LAST:event_jnumberPItemStateChanged

    private void tblRRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRRMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblRRMouseClicked

    private void jSendRRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSendRRActionPerformed
        // TODO add your handling code here:
         if (validCheckRR(jinputRR)) {
            if (validCheckRR1(jinputRR)) {
        String send = "4";
//        String[] words = jnumberSJF.getSelectedItem().toString().split(";");
        send += ";" + jnumberRR.getSelectedItem().toString();
        int num = Integer.valueOf(jnumberRR.getSelectedItem().toString());
        for (int i = 0; i < num; i++) {
            send += ";" + String.valueOf(jinputRR.getModel().getValueAt(i, 0));
            send += ";" + String.valueOf(jinputRR.getModel().getValueAt(i, 1));

        }

        //        laplichSjf.get(0).setNum(Integer.valueOf(tfTenTim.getText()));
        //        laplichSjf.get(0).setId(Integer.valueOf());
        //        laplichSjf.get(0).setArrivalTime(Integer.valueOf());
        //        laplichSjf.get(0).setBurstTime(Integer.valueOf());
        //        laplichSjf.get(1).setNum(Integer.valueOf(tfTenTim.getText()));
        //        laplichSjf.get(1).setId(Integer.valueOf(id2.getText()));
        //        laplichSjf.get(1).setArrivalTime(Integer.valueOf(ArrivalTime2.getText()));
        //        laplichSjf.get(1).setBurstTime(Integer.valueOf(BurstTime2.getText()));
        //        Object s = null;
        control.open();
        control.sendData(send);
        Object o = control.receiveData();
        if (o instanceof String) {
            //            laplichSjf = (ArrayList<sjfModel>) o;
            String tmp = String.valueOf(o);
            updateTableRR(tmp);
        }
        control.close();
        } else {
                JOptionPane.showMessageDialog(null, "Value is not valid");

            }

        } else {

            JOptionPane.showMessageDialog(null, "Field is empty");

        }

    }//GEN-LAST:event_jSendRRActionPerformed

    private void jnumberRRItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jnumberRRItemStateChanged
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jinputRR.getModel();
        int rows2 = 2;
        int rows3 = 3;
        int rows4 = 4;
        int rows5 = 5;
        if (jnumberRR.getSelectedItem().toString().equals("2")) {
            model.setRowCount(rows2);

        }
        if (jnumberRR.getSelectedItem().toString().equals("3")) {
            model.setRowCount(rows3);

        }
        if (jnumberRR.getSelectedItem().toString().equals("4")) {
            model.setRowCount(rows4);

        }
        if (jnumberRR.getSelectedItem().toString().equals("5")) {
            model.setRowCount(rows5);

        }

    }//GEN-LAST:event_jnumberRRItemStateChanged

    private void btn_iconsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_iconsMousePressed
        // TODO add your handling code here:
        setColor(btn_icons);
        resetColor(btn_data);
        resetColor(btn_btns);
        resetColor(btn_fonts);
        resetColor(btn_typo);

        ind_typo.setOpaque(false);
        ind_btns.setOpaque(false);
        ind_data.setOpaque(false);
        ind_fonts.setOpaque(false);
        ind_icons.setOpaque(true);

        cardLayout.show(pnlRight, "cPriority");
    }//GEN-LAST:event_btn_iconsMousePressed

    private void btn_dataMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_dataMousePressed
        // TODO add your handling code here:
        setColor(btn_data);
        resetColor(btn_typo);
        resetColor(btn_btns);
        resetColor(btn_fonts);
        resetColor(btn_icons);

        ind_typo.setOpaque(false);
        ind_btns.setOpaque(false);
        ind_data.setOpaque(true);
        ind_fonts.setOpaque(false);
        ind_icons.setOpaque(false);


    }//GEN-LAST:event_btn_dataMousePressed

    // set and reset color
    void setColor(JPanel panel) {
        panel.setBackground(new Color(135, 112, 225));
    }

    void resetColor(JPanel panel) {
        panel.setBackground(new Color(76, 41, 211));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home20.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home20.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home20.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home20.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home20().setVisible(true);
            }
        });
    }

    private void updateTableSJF(String a) {
        String[] words = a.split(";");
        int num = Integer.valueOf(words[1]);
        DefaultTableModel model = (DefaultTableModel) tblSJF.getModel();
        model.getDataVector().removeAllElements();
        int count = 2;

        for (int i = 0; i < num; i++) {
            model.addRow(new Object[]{words[count], words[count + 1], words[count + 2], words[count + 3], words[count + 4]});
            count += 5;
        }
    }

    private void updateTablePriority(String a) {
        String[] words = a.split(";");
        int num = Integer.valueOf(words[1]);
        DefaultTableModel model = (DefaultTableModel) tblPriority.getModel();
        model.getDataVector().removeAllElements();
        int count = 2;

        for (int i = 0; i < num; i++) {
            model.addRow(new Object[]{words[count], words[count + 1], words[count + 2], words[count + 3], words[count + 4]});
            count += 5;
        }
    }

    private void updateTableFCFS(String a) {
        String[] words = a.split(";");
        int num = Integer.valueOf(words[1]);
        DefaultTableModel model = (DefaultTableModel) tblFCFS.getModel();
        model.getDataVector().removeAllElements();
        int count = 2;

        for (int i = 0; i < num; i++) {
            model.addRow(new Object[]{words[count], words[count + 1], words[count + 2], words[count + 3]});
            count += 4;
        }
    }

    private void updateTableRR(String a) {
        String[] words = a.split(";");
        int num = Integer.valueOf(words[1]);
        DefaultTableModel model = (DefaultTableModel) tblRR.getModel();
        model.getDataVector().removeAllElements();
        int count = 2;

        for (int i = 0; i < num; i++) {
            model.addRow(new Object[]{words[count], words[count + 1], words[count + 2], words[count + 3]});
            count += 4;
        }
    }

    public boolean validCheckFCFS(JTable table) {
        if (table.getCellEditor() != null) {
            table.getCellEditor().stopCellEditing();
        }
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 0; j < table.getColumnCount(); j++) {
                String value = table.getValueAt(i,j).toString();
            if(value.trim().length() == 0) {
               return false;
            }
         }
      }
      return true;
   }
    
     public boolean validCheckFCFS1(JTable table) {
        if (table.getCellEditor() != null) {
            table.getCellEditor().stopCellEditing();
        }
         Pattern pattern = Pattern.compile(".*[^0-9].*");
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 0; j < table.getColumnCount(); j++) {
                String value = table.getValueAt(i,j).toString();
            if(pattern.matcher(value).matches()) {
               return false;
            }
         }
      }
      return true;
   }
     public boolean validCheckRR(JTable table) {
        if (table.getCellEditor() != null) {
            table.getCellEditor().stopCellEditing();
        }
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 0; j < table.getColumnCount(); j++) {
                String value = table.getValueAt(i,j).toString();
            if(value.trim().length() == 0) {
               return false;
            }
         }
      }
      return true;
   }
    
     public boolean validCheckRR1(JTable table) {
        if (table.getCellEditor() != null) {
            table.getCellEditor().stopCellEditing();
        }
         Pattern pattern = Pattern.compile(".*[^0-9].*");
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 0; j < table.getColumnCount(); j++) {
                String value = table.getValueAt(i,j).toString();
            if(pattern.matcher(value).matches()) {
               return false;
            }
         }
      }
      return true;
   }
     public boolean validCheckP(JTable table) {
        if (table.getCellEditor() != null) {
            table.getCellEditor().stopCellEditing();
        }
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 0; j < table.getColumnCount(); j++) {
                String value = table.getValueAt(i,j).toString();
            if(value.trim().length() == 0) {
               return false;
            }
         }
      }
      return true;
   }
    
     public boolean validCheckP1(JTable table) {
        if (table.getCellEditor() != null) {
            table.getCellEditor().stopCellEditing();
        }
         Pattern pattern = Pattern.compile(".*[^0-9].*");
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 0; j < table.getColumnCount(); j++) {
                String value = table.getValueAt(i,j).toString();
            if(pattern.matcher(value).matches()) {
               return false;
            }
         }
      }
      return true;
   }
     public boolean validCheckSJF(JTable table) {
        if (table.getCellEditor() != null) {
            table.getCellEditor().stopCellEditing();
        }
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 0; j < table.getColumnCount(); j++) {
                String value = table.getValueAt(i,j).toString();
            if(value.trim().length() == 0) {
               return false;
            }
         }
      }
      return true;
   }
    
     public boolean validCheckSJF1(JTable table) {
        if (table.getCellEditor() != null) {
            table.getCellEditor().stopCellEditing();
        }
         Pattern pattern = Pattern.compile(".*[^0-9].*");
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 0; j < table.getColumnCount(); j++) {
                String value = table.getValueAt(i,j).toString();
            if(pattern.matcher(value).matches()) {
               return false;
            }
         }
      }
      return true;
   }
    
    

   

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btn_btns;
    private javax.swing.JPanel btn_data;
    private javax.swing.JPanel btn_fonts;
    private javax.swing.JPanel btn_icons;
    private javax.swing.JPanel btn_typo;
    private javax.swing.JPanel ind_btns;
    private javax.swing.JPanel ind_data;
    private javax.swing.JPanel ind_fonts;
    private javax.swing.JPanel ind_icons;
    private javax.swing.JPanel ind_typo;
    private javax.swing.JLabel jFCFS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jRR;
    private javax.swing.JLabel jSJF;
    private javax.swing.JLabel jSRJF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JButton jSendFCFS;
    private javax.swing.JButton jSendPriority;
    private javax.swing.JButton jSendRR;
    private javax.swing.JButton jSendSJF;
    private javax.swing.JTable jTablePriority;
    private javax.swing.JTable jinputFCFS;
    private javax.swing.JTable jinputRR;
    private javax.swing.JTable jinputSJF;
    private javax.swing.JComboBox<String> jnumberFCFS;
    private javax.swing.JComboBox<String> jnumberP;
    private javax.swing.JComboBox<String> jnumberRR;
    private javax.swing.JComboBox<String> jnumberSJF;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblMaximize;
    private javax.swing.JLabel lblMinimize;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlActions;
    private javax.swing.JPanel pnlFCFS;
    private javax.swing.JPanel pnlParent;
    private javax.swing.JPanel pnlPriotity;
    private javax.swing.JPanel pnlRR;
    private javax.swing.JPanel pnlRight;
    private javax.swing.JPanel pnlSJF;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JPanel pnlTypography;
    private javax.swing.JPanel sidepane;
    private javax.swing.JTable tblFCFS;
    private javax.swing.JTable tblPriority;
    private javax.swing.JTable tblRR;
    private javax.swing.JTable tblSJF;
    // End of variables declaration//GEN-END:variables
}
